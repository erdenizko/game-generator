// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users and Authentication
model User {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String   @unique @db.VarChar(255)
  passwordHash     String   @map("password_hash") @db.VarChar(255)
  role             String   @default("owner") @db.VarChar(50)
  stripeCustomerId String?  @map("stripe_customer_id") @db.VarChar(255)
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  subscriptions Subscription[]
  games         Game[]

  @@map("users")
}

// Subscription Management
model Subscription {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId               String    @map("user_id") @db.Uuid
  plan                 String    @db.VarChar(50)
  status               String    @db.VarChar(50)
  stripeSubscriptionId String?   @map("stripe_subscription_id") @db.VarChar(255)
  renewAt              DateTime? @map("renew_at")
  createdAt            DateTime  @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}

// Game Configuration
model Game {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String   @map("user_id") @db.Uuid
  title       String   @db.VarChar(255)
  description String?  @db.Text
  rows        Int      @db.Integer
  columns     Int      @db.Integer
  jsonConfig  Json     @map("json_config") @db.JsonB
  isPublished Boolean  @default(false) @map("is_published")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  assets         GameAsset[]
  languages      Language[]
  regions        Region[]
  slotItems      SlotItem[]
  colorTheme     ColorTheme?
  controlLayout  ControlLayout?
  sessions       Session[]
  hourlyMetrics  HourlyMetric[]
  dailyMetrics   DailyMetric[]

  @@map("games")
}

// Asset Management
model GameAsset {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gameId    String   @map("game_id") @db.Uuid
  type      String   @db.VarChar(50) // 'image', 'audio', 'mascot'
  s3Key     String   @map("s3_key") @db.VarChar(500)
  fileSize  Int?     @map("file_size") @db.Integer
  mimeType  String?  @map("mime_type") @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@map("game_assets")
}

// Localization
model Language {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gameId      String   @map("game_id") @db.Uuid
  locale      String   @db.VarChar(10)
  jsonStrings Json     @map("json_strings") @db.JsonB
  createdAt   DateTime @default(now()) @map("created_at")

  // Relations
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@map("languages")
}

// Regional Configuration
model Region {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gameId    String   @map("game_id") @db.Uuid
  country   String   @db.VarChar(3)
  currency  String   @db.VarChar(3)
  minBet    Decimal  @map("min_bet") @db.Decimal(10, 2)
  maxBet    Decimal  @map("max_bet") @db.Decimal(10, 2)
  step      Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@map("regions")
}

// Slot Item Configuration
model SlotItem {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gameId      String   @map("game_id") @db.Uuid
  name        String   @db.VarChar(100)
  imageKey    String   @map("image_key") @db.VarChar(500)
  probability Decimal  @db.Decimal(5, 4)
  revenue     Decimal? @db.Decimal(10, 2)
  minimumCount    Int      @default(1) @map("minimum_count") @db.Integer
  diagonalPrize   Boolean  @default(false) @map("diagonal_prize")
  orderIndex  Int      @default(0) @map("order_index") @db.Integer
  category    String?  @db.VarChar(50)
  tags        String[] @db.Text
  isCustom    Boolean  @default(true) @map("is_custom")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([orderIndex])
  @@index([category])
  @@map("slot_items")
}

// Runtime Sessions
model Session {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gameId       String   @map("game_id") @db.Uuid
  playerRef    String   @map("player_ref") @db.VarChar(255)
  country      String?  @db.VarChar(3)
  balanceStart Decimal? @map("balance_start") @db.Decimal(15, 2)
  expiresAt    DateTime @map("expires_at")
  createdAt    DateTime @default(now()) @map("created_at")

  // Relations
  game  Game   @relation(fields: [gameId], references: [id])
  spins Spin[]

  @@map("sessions")
}

// Spin History
model Spin {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sessionId  String   @map("session_id") @db.Uuid
  bet        Decimal  @db.Decimal(10, 2)
  win        Decimal  @default(0) @db.Decimal(10, 2)
  resultJson Json     @map("result_json") @db.JsonB
  createdAt  DateTime @default(now()) @map("created_at")

  // Relations
  session Session @relation(fields: [sessionId], references: [id])

  @@map("spins")
}

// Hourly Metrics Aggregation
model HourlyMetric {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gameId      String   @map("game_id") @db.Uuid
  country     String?  @db.VarChar(3)
  currency    String?  @db.VarChar(3)
  hour        DateTime @db.Timestamp
  totalBets   Decimal  @default(0) @map("total_bets") @db.Decimal(15, 2)
  totalWins   Decimal  @default(0) @map("total_wins") @db.Decimal(15, 2)
  netRevenue  Decimal  @default(0) @map("net_revenue") @db.Decimal(15, 2)
  spinCount   Int      @default(0) @map("spin_count") @db.Integer
  playerCount Int      @default(0) @map("player_count") @db.Integer
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@unique([gameId, country, currency, hour])
  @@index([gameId, hour])
  @@index([hour])
  @@map("hourly_metrics")
}

// Daily Metrics Snapshots
model DailyMetric {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gameId      String   @map("game_id") @db.Uuid
  country     String?  @db.VarChar(3)
  currency    String?  @db.VarChar(3)
  date        DateTime @db.Date
  totalBets   Decimal  @default(0) @map("total_bets") @db.Decimal(15, 2)
  totalWins   Decimal  @default(0) @map("total_wins") @db.Decimal(15, 2)
  netRevenue  Decimal  @default(0) @map("net_revenue") @db.Decimal(15, 2)
  spinCount   Int      @default(0) @map("spin_count") @db.Integer
  playerCount Int      @default(0) @map("player_count") @db.Integer
  rtp         Decimal? @db.Decimal(5, 4) // Return to Player percentage
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@unique([gameId, country, currency, date])
  @@index([gameId, date])
  @@index([date])
  @@map("daily_metrics")
}
// Color Theme Configuration
model ColorTheme {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gameId          String   @unique @map("game_id") @db.Uuid
  primaryColor    String   @map("primary_color") @db.VarChar(7)
  secondaryColor  String   @map("secondary_color") @db.VarChar(7)
  accentColor     String?  @map("accent_color") @db.VarChar(7)
  backgroundColor String?  @map("background_color") @db.VarChar(7)
  textColor       String?  @map("text_color") @db.VarChar(7)
  contrastRatio   Decimal? @map("contrast_ratio") @db.Decimal(4, 2)
  isAccessible    Boolean  @default(false) @map("is_accessible")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId])
  @@map("color_themes")
}

// Control Layout Configuration
model ControlLayout {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gameId       String   @unique @map("game_id") @db.Uuid
  layoutType   String   @map("layout_type") @db.VarChar(20)
  buttonStyle  String   @map("button_style") @db.VarChar(20)
  position     String   @map("position") @db.VarChar(20)
  autoHide     Boolean  @default(false) @map("auto_hide")
  customStyles Json?    @map("custom_styles") @db.JsonB
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId])
  @@map("control_layouts")
}